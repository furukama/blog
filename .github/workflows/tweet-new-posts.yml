name: Tweet New Posts

on:
  push:
    paths:
      - 'content/blog/*.md'
    branches:
      - main

jobs:
  tweet:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      
      - name: Check for new posts
        id: check
        run: |
          # Get added/modified blog posts
          NEW_POSTS=$(git diff --name-only HEAD~1 HEAD | grep '^content/blog/.*\.md$' | grep -v '_index.md' || true)
          echo "new_posts=$NEW_POSTS" >> $GITHUB_OUTPUT
      
      - name: Setup Python
        if: steps.check.outputs.new_posts != ''
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        if: steps.check.outputs.new_posts != ''
        run: |
          pip install requests pyyaml
      
      - name: Tweet new posts
        if: steps.check.outputs.new_posts != ''
        env:
          TWITTER_BEARER_TOKEN: ${{ secrets.TWITTER_BEARER_TOKEN }}
        run: |
          python3 << 'EOF'
          import os
          import yaml
          import requests
          import json
          
          # Twitter API v2 configuration
          bearer_token = os.environ['TWITTER_BEARER_TOKEN']
          tweet_url = "https://api.twitter.com/2/tweets"
          headers = {
              "Authorization": f"Bearer {bearer_token}",
              "Content-Type": "application/json"
          }
          
          # Get new posts
          new_posts = os.environ.get('new_posts', '').strip().split('\n')
          
          for post_path in new_posts:
              if post_path and post_path.endswith('.md') and '_index' not in post_path:
                  with open(post_path, 'r') as f:
                      content = f.read()
                      
                  # Extract front matter
                  if content.startswith('---'):
                      front_matter = content.split('---')[1]
                      metadata = yaml.safe_load(front_matter)
                      
                      title = metadata.get('title', 'New post')
                      description = metadata.get('description', '')
                      
                      # Create URL from filename
                      filename = os.path.basename(post_path).replace('.md', '')
                      url = f"https://furukama.com/blog/{filename}/"
                      
                      # Compose tweet
                      tweet = f"üìù {title}\n\n{description}\n\n{url}"
                      
                      # Ensure tweet is under 280 characters
                      if len(tweet) > 280:
                          available_space = 280 - len(url) - 10  # 10 for newlines and emoji
                          combined_text = f"üìù {title} - {description}"[:available_space] + "..."
                          tweet = f"{combined_text}\n\n{url}"
                      
                      # Post tweet
                      try:
                          response = requests.post(
                              tweet_url,
                              headers=headers,
                              json={"text": tweet}
                          )
                          
                          if response.status_code == 201:
                              print(f"‚úÖ Tweeted about: {title}")
                          else:
                              print(f"‚ùå Error tweeting: {response.status_code} - {response.text}")
          EOF
        env:
          new_posts: ${{ steps.check.outputs.new_posts }}